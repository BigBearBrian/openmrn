/** \copyright
 * Copyright (c) 2015, Stuart W Baker
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are  permitted provided that the following conditions are met:
 * 
 *  - Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 *  - Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * \file ProtocolIdentification.cxxtest
 * This file provides an test of the OpenLCB Protocol Identification
 * Protocol Implementation
 *
 * @author Stuart W. Baker
 * @date 2 February 2015
 */

#include "utils/async_if_test_helper.hxx"
#include "nmranet/ProtocolIdentification.hxx"
#include "nmranet/AliasAllocator.hxx"

using namespace nmranet;

class ProtocolIdentificationTest : public AsyncNodeTest
{
protected:
    ProtocolIdentificationTest()
        : AsyncNodeTest()
        , handler_(node_, 0x665544332211)
    {
    }

    ProtocolIdentificationHandler handler_;
};

TEST_F(ProtocolIdentificationTest, WillRespond)
{
    expect_packet(":X1966822AN09FFE65544332211;");
    send_packet(":X198289FFN022A;");
    wait();
}

TEST_F(ProtocolIdentificationTest, AnotherTest)
{
    send_packet_and_expect_response(":X198289FFN022A;", ":X1966822AN09FFE65544332211;");
}

